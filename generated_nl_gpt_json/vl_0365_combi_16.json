{
  "gpt_result": {
    "nl_utterance": "Create a bar chart showing the issue amount sorted by count of name in descending order, colored by the type of gilt or raw type.",
    "encoded_fields": [
      {
        "field": "issueAmount",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "issue amount"
      },
      {
        "field": [
          "giltType",
          "rawType"
        ],
        "type": "nominal",
        "nl_ref_type": "ambiguous",
        "nl_ref_phrase": "type of gilt or raw type"
      }
    ],
    "constraints": [
      {
        "c_type": "task",
        "c_name": "composition",
        "c_list": [
          {
            "mark": "bar",
            "encoding": {
              "x": {},
              "y": {
                "type": "quantitative"
              },
              "color": {
                "type": "nominal"
              }
            },
            "x_y_reversable": true
          },
          {
            "mark": "area",
            "encoding": {
              "x": {},
              "y": {
                "type": "quantitative"
              },
              "color": {
                "type": "nominal"
              }
            }
          },
          {
            "mark": "arc",
            "encoding": {
              "theta": {
                "type": "quantitative"
              },
              "color": {
                "type": "nominal"
              }
            }
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "bar chart"
      },
      {
        "c_type": "transform",
        "c_name": "sort",
        "c_list": [
          {
            "field": "name",
            "order": "descending",
            "op": "count"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "sorted by count of name in descending order"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"rawType\": \"2\\u00bd% Index-linked Treasury Stock 2024\",\n      \"coupon\": \"2\\u00bd\",\n      \"giltType\": \"Index Linked\",\n      \"code\": \"GB0008983024\",\n      \"redemptionDate\": \" 17-Jul-2024\",\n      \"issueDate\": \" 30-Dec-1986\",\n      \"divDates\": \"17 Jan/Jul\",\n      \"divNextDate\": \" 06-Jan-2023\",\n      \"issueAmount\": 6821,\n      \"baseRPI\": 97.667931,\n      \"amountINCinfUplift\": 22363.0,\n      \"issueYear\": 1986,\n      \"totalCumulative\": 6821,\n      \"id\": 1\n    },\n    {\n      \"rawType\": \"2\\u00bc% Treasury Gilt 2023\",\n      \"coupon\": \"2\\u00bc\",\n      \"giltType\": \"Treasury Gilt\",\n      \"code\": \"GB00B7Z53659\",\n      \"redemptionDate\": \" 07-Sep-2023\",\n      \"issueDate\": \" 12-Jun-2013\",\n      \"divDates\": \"7 Mar/Sep\",\n      \"divNextDate\": \" 24-Feb-2023\",\n      \"issueAmount\": 35922,\n      \"baseRPI\": NaN,\n      \"amountINCinfUplift\": NaN,\n      \"issueYear\": 2013,\n      \"totalCumulative\": 774228,\n      \"id\": 37\n    },\n    {\n      \"rawType\": \"0\\u00be% Treasury Gilt 2023\",\n      \"coupon\": \"0\\u00be\",\n      \"giltType\": \"Treasury Gilt\",\n      \"code\": \"GB00BF0HZ991\",\n      \"redemptionDate\": \" 22-Jul-2023\",\n      \"issueDate\": \" 20-Jul-2017\",\n      \"divDates\": \"22 Jan/Jul\",\n      \"divNextDate\": \" 12-Jan-2023\",\n      \"issueAmount\": 34359,\n      \"baseRPI\": NaN,\n      \"amountINCinfUplift\": NaN,\n      \"issueYear\": 2017,\n      \"totalCumulative\": 1206969,\n      \"id\": 55\n    },\n    {\n      \"rawType\": \"1\\u00be% Treasury Gilt 2057\",\n      \"coupon\": \"1\\u00be\",\n      \"giltType\": \"Treasury Gilt\",\n      \"code\": \"GB00BD0XH204\",\n      \"redemptionDate\": \" 22-Jul-2057\",\n      \"issueDate\": \" 25-Jan-2017\",\n      \"divDates\": \"22 Jan/Jul\",\n      \"divNextDate\": \" 12-Jan-2023\",\n      \"issueAmount\": 30741,\n      \"baseRPI\": NaN,\n      \"amountINCinfUplift\": NaN,\n      \"issueYear\": 2017,\n      \"totalCumulative\": 1119842,\n      \"id\": 52\n    },\n    {\n      \"rawType\": \"0 1/8% Index-linked Treasury Gilt 2036\",\n      \"coupon\": \"1/8\",\n      \"giltType\": \"Index Linked\",\n      \"code\": \"GB00BYZW3J87\",\n      \"redemptionDate\": \" 22-Nov-2036\",\n      \"issueDate\": \" 11-Mar-2016\",\n      \"divDates\": \"22 May/Nov\",\n      \"divNextDate\": \" 11-Nov-2022\",\n      \"issueAmount\": 13905,\n      \"baseRPI\": 260.01935,\n      \"amountINCinfUplift\": 18422.0,\n      \"issueYear\": 2016,\n      \"totalCumulative\": 972489,\n      \"id\": 46\n    }\n  ],\n  \"column names\": [\n    \"rawType\",\n    \"coupon\",\n    \"giltType\",\n    \"code\",\n    \"redemptionDate\",\n    \"issueDate\",\n    \"divDates\",\n    \"divNextDate\",\n    \"issueAmount\",\n    \"baseRPI\",\n    \"amountINCinfUplift\",\n    \"issueYear\",\n    \"totalCumulative\",\n    \"id\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a queries structure. One NL 'utterance' is in one or two sentences. Here are two examples from Queries for reference:\n    Line Graph of SUM (Sales Forecast) vs Order Date.\n    mpg vs displacement as a scatter chart.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"issueAmount\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": [\n        \"giltType\",\n        \"rawType\"\n      ],\n      \"type\": \"nominal\",\n      \"nl_ref_type\": \"ambiguous\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"task\",\n      \"c_name\": \"composition\",\n      \"c_list\": [\n        {\n          \"mark\": \"bar\",\n          \"encoding\": {\n            \"x\": {},\n            \"y\": {\n              \"type\": \"quantitative\"\n            },\n            \"color\": {\n              \"type\": \"nominal\"\n            }\n          },\n          \"x_y_reversable\": true\n        },\n        {\n          \"mark\": \"area\",\n          \"encoding\": {\n            \"x\": {},\n            \"y\": {\n              \"type\": \"quantitative\"\n            },\n            \"color\": {\n              \"type\": \"nominal\"\n            }\n          }\n        },\n        {\n          \"mark\": \"arc\",\n          \"encoding\": {\n            \"theta\": {\n              \"type\": \"quantitative\"\n            },\n            \"color\": {\n              \"type\": \"nominal\"\n            }\n          }\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"sort\",\n      \"c_list\": [\n        {\n          \"field\": \"name\",\n          \"order\": \"descending\",\n          \"op\": \"count\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}