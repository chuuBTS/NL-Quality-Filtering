{
  "gpt_result": {
    "nl_utterance": "Please create a line chart to show the trend over time using the date and value.",
    "encoded_fields": [
      {
        "field": "date",
        "type": "temporal",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "date"
      },
      {
        "field": "value",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "value"
      }
    ],
    "constraints": [
      {
        "c_type": "task",
        "c_name": "trend",
        "c_list": [
          {
            "mark": [
              "bar",
              "line",
              "area"
            ],
            "encoding": {
              "x": {
                "type": "temporal"
              }
            }
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "trend over time"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"date\": \"2001 MAY\",\n      \"label\": \"2001 APR-JUN\",\n      \"month\": \"May\",\n      \"quarter\": NaN,\n      \"sourceDataset\": \"LMS\",\n      \"updateDate\": \"2022-04-11T23:00:00.000Z\",\n      \"value\": 568,\n      \"year\": 2001\n    },\n    {\n      \"date\": \"2016 SEP\",\n      \"label\": \"2016 AUG-OCT\",\n      \"month\": \"September\",\n      \"quarter\": NaN,\n      \"sourceDataset\": \"LMS\",\n      \"updateDate\": \"2022-04-11T23:00:00.000Z\",\n      \"value\": 676,\n      \"year\": 2016\n    },\n    {\n      \"date\": \"2010 AUG\",\n      \"label\": \"2010 JUL-SEP\",\n      \"month\": \"August\",\n      \"quarter\": NaN,\n      \"sourceDataset\": \"LMS\",\n      \"updateDate\": \"2022-04-11T23:00:00.000Z\",\n      \"value\": 407,\n      \"year\": 2010\n    },\n    {\n      \"date\": \"2021 AUG\",\n      \"label\": \"2021 JUL-SEP\",\n      \"month\": \"August\",\n      \"quarter\": NaN,\n      \"sourceDataset\": \"LMS\",\n      \"updateDate\": \"2022-10-10T23:00:00.000Z\",\n      \"value\": 985,\n      \"year\": 2021\n    },\n    {\n      \"date\": \"2004 NOV\",\n      \"label\": \"2004 OCT-DEC\",\n      \"month\": \"November\",\n      \"quarter\": NaN,\n      \"sourceDataset\": \"LMS\",\n      \"updateDate\": \"2022-04-11T23:00:00.000Z\",\n      \"value\": 569,\n      \"year\": 2004\n    }\n  ],\n  \"column names\": [\n    \"date\",\n    \"label\",\n    \"month\",\n    \"quarter\",\n    \"sourceDataset\",\n    \"updateDate\",\n    \"value\",\n    \"year\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a commands structure. One NL 'utterance' is in one or two sentences. Here are two examples from Commands for reference:\n    Please show me a histogram of weights with 500 intervals.\n    Sort creative types by number of movies.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"date\",\n      \"type\": \"temporal\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": \"value\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"task\",\n      \"c_name\": \"trend\",\n      \"c_list\": [\n        {\n          \"mark\": [\n            \"bar\",\n            \"line\",\n            \"area\"\n          ],\n          \"encoding\": {\n            \"x\": {\n              \"type\": \"temporal\"\n            }\n          }\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}