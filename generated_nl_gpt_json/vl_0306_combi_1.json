{
  "gpt_result": {
    "nl_utterance": "What is the happiness score of each country?",
    "encoded_fields": [
      {
        "field": "Happy",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "happiness score"
      }
    ],
    "constraints": []
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"Rank\": 12,\n      \"Country\": \"Australia \",\n      \"GDP\": 60443.10916,\n      \"Happy\": 7.162,\n      \"Population\": 25688079\n    },\n    {\n      \"Rank\": 41,\n      \"Country\": \"Cyprus \",\n      \"GDP\": 31551.81641,\n      \"Happy\": 6.221,\n      \"Population\": 1244188\n    },\n    {\n      \"Rank\": 20,\n      \"Country\": \"France \",\n      \"GDP\": 43658.97898,\n      \"Happy\": 6.687,\n      \"Population\": 67749632\n    },\n    {\n      \"Rank\": 23,\n      \"Country\": \"Costa Rica \",\n      \"GDP\": 12472.44373,\n      \"Happy\": 6.582,\n      \"Population\": 5153957\n    },\n    {\n      \"Rank\": 31,\n      \"Country\": \"Italy \",\n      \"GDP\": 35657.49756,\n      \"Happy\": 6.467,\n      \"Population\": 59109668\n    }\n  ],\n  \"column names\": [\n    \"Rank\",\n    \"Country\",\n    \"GDP\",\n    \"Happy\",\n    \"Population\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a questions structure. One NL 'utterance' is in one or two sentences. Here are two examples from Questions for reference:\n    What is our profit based on shipping mode by customer segment?\n    How many cars do each country manufacture?\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"Happy\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": []\n}\n\n### Output:"
}