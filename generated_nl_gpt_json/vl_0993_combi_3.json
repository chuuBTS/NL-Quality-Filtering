{
  "gpt_result": {
    "nl_utterance": "Show the trend of data from 2002 to 2020 for different countries.",
    "encoded_fields": [],
    "constraints": [
      {
        "column": [
          "2002",
          "2020"
        ],
        "nl_ref_type": "ambiguous",
        "nl_ref_phrase": "from 2002 to 2020"
      },
      {
        "column": "Country",
        "nl_ref_type": "ambiguous",
        "nl_ref_phrase": "countries"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"Country\": \"UK\",\n      \"2002\": 2.5,\n      \"2003\": 2.4,\n      \"2004\": 2.4,\n      \"2005\": 2.3,\n      \"2006\": 2.2,\n      \"2007\": 2.3,\n      \"2008\": 2.2,\n      \"2009\": 2.4,\n      \"2010\": 2.4,\n      \"2011\": 2.4,\n      \"2012\": 2.4,\n      \"2013\": 2.4,\n      \"2014\": 2.4,\n      \"2015\": 2.4,\n      \"2016\": 2.4,\n      \"2017\": 2.3,\n      \"2018\": 2.3,\n      \"2019\": 2.3,\n      \"2020\": 2.0\n    },\n    {\n      \"Country\": \"Romania\",\n      \"2002\": 2.1,\n      \"2003\": 2.4,\n      \"2004\": 2.4,\n      \"2005\": 2.0,\n      \"2006\": 1.9,\n      \"2007\": 2.0,\n      \"2008\": 1.7,\n      \"2009\": 1.8,\n      \"2010\": 2.1,\n      \"2011\": 2.0,\n      \"2012\": 2.0,\n      \"2013\": 2.1,\n      \"2014\": 2.4,\n      \"2015\": 2.5,\n      \"2016\": 2.4,\n      \"2017\": 1.9,\n      \"2018\": 2.0,\n      \"2019\": 2.1,\n      \"2020\": 1.9\n    },\n    {\n      \"Country\": \"Ireland\",\n      \"2002\": 2.3,\n      \"2003\": 2.3,\n      \"2004\": 2.5,\n      \"2005\": 2.5,\n      \"2006\": 2.4,\n      \"2007\": 2.5,\n      \"2008\": 2.3,\n      \"2009\": 2.3,\n      \"2010\": 2.5,\n      \"2011\": 2.5,\n      \"2012\": 2.4,\n      \"2013\": 2.5,\n      \"2014\": 2.4,\n      \"2015\": 1.9,\n      \"2016\": 1.9,\n      \"2017\": 1.8,\n      \"2018\": 1.6,\n      \"2019\": 1.4,\n      \"2020\": 1.2\n    },\n    {\n      \"Country\": \"Greece\",\n      \"2002\": 2.3,\n      \"2003\": 2.2,\n      \"2004\": 2.1,\n      \"2005\": 2.1,\n      \"2006\": 2.0,\n      \"2007\": 2.1,\n      \"2008\": 2.1,\n      \"2009\": 2.1,\n      \"2010\": 2.7,\n      \"2011\": 3.0,\n      \"2012\": 3.3,\n      \"2013\": 3.7,\n      \"2014\": 3.7,\n      \"2015\": 3.8,\n      \"2016\": 3.8,\n      \"2017\": 4.0,\n      \"2018\": 3.8,\n      \"2019\": 3.9,\n      \"2020\": 3.8\n    },\n    {\n      \"Country\": \"Hungary\",\n      \"2002\": 2.7,\n      \"2003\": 2.6,\n      \"2004\": 2.8,\n      \"2005\": 2.7,\n      \"2006\": 2.8,\n      \"2007\": 2.8,\n      \"2008\": 2.7,\n      \"2009\": 2.6,\n      \"2010\": 2.6,\n      \"2011\": 2.5,\n      \"2012\": 2.5,\n      \"2013\": 2.4,\n      \"2014\": 2.4,\n      \"2015\": 2.5,\n      \"2016\": 2.5,\n      \"2017\": 2.4,\n      \"2018\": 2.3,\n      \"2019\": 2.3,\n      \"2020\": 2.2\n    }\n  ],\n  \"column names\": [\n    \"Country\",\n    \"2002\",\n    \"2003\",\n    \"2004\",\n    \"2005\",\n    \"2006\",\n    \"2007\",\n    \"2008\",\n    \"2009\",\n    \"2010\",\n    \"2011\",\n    \"2012\",\n    \"2013\",\n    \"2014\",\n    \"2015\",\n    \"2016\",\n    \"2017\",\n    \"2018\",\n    \"2019\",\n    \"2020\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart.  One NL 'utterance' is in one or two sentences. Here are two examples from Others for reference:\n    Trend for average horsepower over time across different origin.\n    I want to know how many orders there are by the quantity of the order.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [],\n  \"constraints\": []\n}\n\n### Output:"
}