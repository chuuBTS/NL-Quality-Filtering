{
  "gpt_result": {
    "nl_utterance": "Create a rect chart to show the sum of accepted assets against the reviewed assets.",
    "encoded_fields": [
      {
        "field": "reviewed_assets",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "reviewed assets"
      },
      {
        "field": "accepted_assets",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "accepted assets"
      }
    ],
    "constraints": [
      {
        "c_type": "mark",
        "c_name": "rect chart",
        "c_list": [
          {
            "mark": "rect",
            "encoding": {
              "x": {},
              "y": {},
              "color": {
                "type": "quantitative"
              },
              "column": {
                "ignore": true,
                "type": "nominal"
              },
              "row": {
                "ignore": true,
                "type": "nominal"
              }
            },
            "unique_map": {
              "(x,y)": "color"
            }
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "rect chart"
      },
      {
        "c_type": "transform",
        "c_name": "aggregate",
        "c_list": [
          {
            "field": "accepted_assets",
            "aggregate": "sum"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "sum of accepted assets"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"review_time_s\": 10,\n      \"available_time_s\": 101829,\n      \"available_time_h\": 28,\n      \"success\": 0.01,\n      \"reviewed_assets\": 10182,\n      \"accepted_assets\": 101\n    },\n    {\n      \"review_time_s\": 10,\n      \"available_time_s\": 207760,\n      \"available_time_h\": 57,\n      \"success\": 0.01,\n      \"reviewed_assets\": 20776,\n      \"accepted_assets\": 207\n    },\n    {\n      \"review_time_s\": 10,\n      \"available_time_s\": 57861,\n      \"available_time_h\": 16,\n      \"success\": 0.01,\n      \"reviewed_assets\": 5786,\n      \"accepted_assets\": 57\n    },\n    {\n      \"review_time_s\": 10,\n      \"available_time_s\": 85313,\n      \"available_time_h\": 23,\n      \"success\": 0.01,\n      \"reviewed_assets\": 8531,\n      \"accepted_assets\": 85\n    },\n    {\n      \"review_time_s\": 10,\n      \"available_time_s\": 95603,\n      \"available_time_h\": 26,\n      \"success\": 0.01,\n      \"reviewed_assets\": 9560,\n      \"accepted_assets\": 95\n    }\n  ],\n  \"column names\": [\n    \"review_time_s\",\n    \"available_time_s\",\n    \"available_time_h\",\n    \"success\",\n    \"reviewed_assets\",\n    \"accepted_assets\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a queries structure. One NL 'utterance' is in one or two sentences. Here are two examples from Queries for reference:\n    Line Graph of SUM (Sales Forecast) vs Order Date.\n    Cylinders average mpg.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"reviewed_assets\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": \"accepted_assets\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"mark\",\n      \"c_name\": \"rect chart\",\n      \"c_list\": [\n        {\n          \"mark\": \"rect\",\n          \"encoding\": {\n            \"x\": {},\n            \"y\": {},\n            \"color\": {\n              \"type\": \"quantitative\"\n            },\n            \"column\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            },\n            \"row\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            }\n          },\n          \"unique_map\": {\n            \"(x,y)\": \"color\"\n          }\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"aggregate\",\n      \"c_list\": [\n        {\n          \"field\": \"accepted_assets\",\n          \"aggregate\": \"sum\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}