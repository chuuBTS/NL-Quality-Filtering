{
  "gpt_result": {
    "nl_utterance": "Show the sum of gy values.",
    "encoded_fields": [
      {
        "field": "gy",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "gy"
      }
    ],
    "constraints": [
      {
        "c_type": "transform",
        "c_name": "aggregate",
        "c_list": [
          {
            "field": "gy",
            "aggregate": "sum"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "sum"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"x1\": 0.1127757847533637,\n      \"y1\": 3.219650288092189,\n      \"x2\": 0.7414215246636786,\n      \"y2\": 4.408505721830985,\n      \"x3\": 0.115946188340807,\n      \"y3\": 1.9641485275288084,\n      \"gx\": 2.9805187319884734,\n      \"gy\": 51.74731182795699,\n      \"x\": 1.0,\n      \"y2r\": 4.339083506722151,\n      \"y3r\": 1.9470763977806225\n    },\n    {\n      \"x1\": 22.508280269058297,\n      \"y1\": 1.4667393565941094,\n      \"x2\": 47.57552914798207,\n      \"y2\": 2.1609615076824578,\n      \"x3\": NaN,\n      \"y3\": NaN,\n      \"gx\": NaN,\n      \"gy\": NaN,\n      \"x\": 36.0,\n      \"y2r\": 2.3576577838241564,\n      \"y3r\": -1.5697823303457112\n    },\n    {\n      \"x1\": 59.02212032884903,\n      \"y1\": -1.477919600938968,\n      \"x2\": NaN,\n      \"y2\": NaN,\n      \"x3\": NaN,\n      \"y3\": NaN,\n      \"gx\": NaN,\n      \"gy\": NaN,\n      \"x\": NaN,\n      \"y2r\": NaN,\n      \"y3r\": NaN\n    },\n    {\n      \"x1\": 12.135625560538118,\n      \"y1\": 2.26509483034571,\n      \"x2\": 17.479114349775784,\n      \"y2\": 2.907250320102432,\n      \"x3\": NaN,\n      \"y3\": NaN,\n      \"gx\": NaN,\n      \"gy\": NaN,\n      \"x\": 20.0,\n      \"y2r\": 2.807455885883482,\n      \"y3r\": 0.5556978233034564\n    },\n    {\n      \"x1\": 54.04534155455905,\n      \"y1\": -1.0729566794707646,\n      \"x2\": NaN,\n      \"y2\": NaN,\n      \"x3\": NaN,\n      \"y3\": NaN,\n      \"gx\": NaN,\n      \"gy\": NaN,\n      \"x\": NaN,\n      \"y2r\": NaN,\n      \"y3r\": NaN\n    }\n  ],\n  \"column names\": [\n    \"x1\",\n    \"y1\",\n    \"x2\",\n    \"y2\",\n    \"x3\",\n    \"y3\",\n    \"gx\",\n    \"gy\",\n    \"x\",\n    \"y2r\",\n    \"y3r\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart.  One NL 'utterance' is in one or two sentences. Here are two examples from Others for reference:\n    Trend for average horsepower over time across different origin.\n    scatter(x=production budget, y=worldwide gross) for content rating.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"gy\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"aggregate\",\n      \"c_list\": [\n        {\n          \"field\": \"gy\",\n          \"aggregate\": \"sum\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}