{
  "gpt_result": {
    "nl_utterance": "Create a scatter plot to show the correlation between CO2 per capita and CRI Score for different regions.",
    "encoded_fields": [
      {
        "field": "CO2 per cap",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "CO2 per capita"
      },
      {
        "field": "CRI Score ",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "CRI Score"
      },
      {
        "field": [
          "Continent",
          "Country"
        ],
        "type": "nominal",
        "nl_ref_type": "ambiguous",
        "nl_ref_phrase": "regions"
      }
    ],
    "constraints": [
      {
        "c_type": "task",
        "c_name": "correlation",
        "c_list": [
          {
            "mark": "circle",
            "encoding": {
              "x": {
                "type": "quantitative"
              },
              "y": {
                "type": "quantitative"
              }
            }
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "correlation"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"CRI Rank\": 130,\n      \"Country\": \"Albania\",\n      \"CRI Score \": 118.0,\n      \"CO2 per cap\": 1.62,\n      \"Continent\": \"Europe\"\n    },\n    {\n      \"CRI Rank\": 11,\n      \"Country\": \"Sudan\",\n      \"CRI Score \": 19.83,\n      \"CO2 per cap\": 0.46,\n      \"Continent\": \"Africa\"\n    },\n    {\n      \"CRI Rank\": 130,\n      \"Country\": \"Kosovo\",\n      \"CRI Score \": 118.0,\n      \"CO2 per cap\": 3.4,\n      \"Continent\": \"Europe\"\n    },\n    {\n      \"CRI Rank\": 97,\n      \"Country\": \"Hungary\",\n      \"CRI Score \": 85.83,\n      \"CO2 per cap\": 4.99,\n      \"Continent\": \"Europe\"\n    },\n    {\n      \"CRI Rank\": 130,\n      \"Country\": \"Lithuania\",\n      \"CRI Score \": 118.0,\n      \"CO2 per cap\": 4.98,\n      \"Continent\": \"Europe\"\n    }\n  ],\n  \"column names\": [\n    \"CRI Rank\",\n    \"Country\",\n    \"CRI Score \",\n    \"CO2 per cap\",\n    \"Continent\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a commands structure. One NL 'utterance' is in one or two sentences. Here are two examples from Commands for reference:\n    Graph to show the acceleration for cars from different countries segregated based on number of cylinders.\n    Please show me a histogram of weights with 500 intervals.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"CO2 per cap\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": \"CRI Score \",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": [\n        \"Continent\",\n        \"Country\"\n      ],\n      \"type\": \"nominal\",\n      \"nl_ref_type\": \"ambiguous\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"task\",\n      \"c_name\": \"correlation\",\n      \"c_list\": [\n        {\n          \"mark\": \"circle\",\n          \"encoding\": {\n            \"x\": {\n              \"type\": \"quantitative\"\n            },\n            \"y\": {\n              \"type\": \"quantitative\"\n            }\n          }\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}