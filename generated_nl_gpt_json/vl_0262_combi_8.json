{
  "gpt_result": {
    "nl_utterance": "Create a bar chart that shows the count of data samples for each state.",
    "encoded_fields": [
      {
        "column": "State",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "each state"
      }
    ],
    "constraints": [
      {
        "c_type": "mark",
        "c_name": "bar chart",
        "c_list": [
          {
            "mark": "bar",
            "encoding": {
              "x": {},
              "y": {
                "type": "quantitative"
              },
              "color": {
                "type": "nominal",
                "ignore": true
              },
              "column": {
                "ignore": true,
                "type": "nominal"
              },
              "row": {
                "ignore": true,
                "type": "nominal"
              }
            },
            "unique_map": {
              "x": "State"
            }
          },
          {
            "mark": "bar",
            "encoding": {
              "y": {},
              "x": {
                "type": "quantitative"
              },
              "color": {
                "type": "nominal",
                "ignore": true
              },
              "column": {
                "ignore": true,
                "type": "nominal"
              },
              "row": {
                "ignore": true,
                "type": "nominal"
              }
            },
            "unique_map": {
              "y": "State"
            }
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "bar chart"
      },
      {
        "c_type": "transform",
        "c_name": "aggregate",
        "c_list": [
          {
            "aggregate": "count"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "count of data samples"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"ID\": 100,\n      \"Name\": \"Johnson City\",\n      \"Mobility\": 0.0621988103,\n      \"State\": \"TN\",\n      \"Population\": 576081,\n      \"Urban\": 1,\n      \"Black\": 0.021,\n      \"Seg_racial\": 0.09,\n      \"Seg_income\": 0.035,\n      \"Seg_poverty\": 0.03,\n      \"Seg_affluence\": 0.038,\n      \"Commute\": 0.325,\n      \"Income\": 31560,\n      \"Gini\": 0.468,\n      \"Share01\": 13.459,\n      \"Gini_99\": 0.333,\n      \"Middle_class\": 0.548,\n      \"Local_tax_rate\": 0.02,\n      \"Local_gov_spending\": 1886.0,\n      \"Progressivity\": 0.0,\n      \"EITC\": 0.0,\n      \"School_spending\": 5.185,\n      \"Student_teacher_ratio\": NaN,\n      \"Test_scores\": 2.728,\n      \"HS_dropout\": -0.015,\n      \"Colleges\": 0.014,\n      \"Tuition\": 4817.0,\n      \"Graduation\": -0.002,\n      \"Labor_force_participation\": 0.587,\n      \"Manufacturing\": 0.237,\n      \"Chinese_imports\": 5.294,\n      \"Teenage_labor\": 0.004,\n      \"Migration_in\": 0.006,\n      \"Migration_out\": 0.005,\n      \"Foreign_born\": 0.012,\n      \"Social_capital\": -0.298,\n      \"Religious\": 0.514,\n      \"Violent_crime\": 0.001,\n      \"Single_mothers\": 0.19,\n      \"Divorced\": 0.11,\n      \"Married\": 0.601,\n      \"Longitude\": -82.4363861083984,\n      \"Latitude\": 36.4703712463379\n    },\n    {\n      \"ID\": 25701,\n      \"Name\": \"Cape Girardeau\",\n      \"Mobility\": 0.0600515455,\n      \"State\": \"MO\",\n      \"Population\": 184036,\n      \"Urban\": 1,\n      \"Black\": 0.075,\n      \"Seg_racial\": 0.203,\n      \"Seg_income\": 0.042,\n      \"Seg_poverty\": 0.044,\n      \"Seg_affluence\": 0.038,\n      \"Commute\": 0.436,\n      \"Income\": 30141,\n      \"Gini\": 0.453,\n      \"Share01\": 11.114,\n      \"Gini_99\": 0.342,\n      \"Middle_class\": 0.54,\n      \"Local_tax_rate\": 0.016,\n      \"Local_gov_spending\": 1658.0,\n      \"Progressivity\": 0.0,\n      \"EITC\": 0.0,\n      \"School_spending\": 4.671,\n      \"Student_teacher_ratio\": 16.0,\n      \"Test_scores\": -3.501,\n      \"HS_dropout\": 0.017,\n      \"Colleges\": 0.016,\n      \"Tuition\": 3329.0,\n      \"Graduation\": 0.16,\n      \"Labor_force_participation\": 0.63,\n      \"Manufacturing\": 0.179,\n      \"Chinese_imports\": 3.373,\n      \"Teenage_labor\": 0.005,\n      \"Migration_in\": 0.009,\n      \"Migration_out\": 0.01,\n      \"Foreign_born\": 0.008,\n      \"Social_capital\": 0.344,\n      \"Religious\": 0.536,\n      \"Violent_crime\": 0.001,\n      \"Single_mothers\": 0.225,\n      \"Divorced\": 0.101,\n      \"Married\": 0.576,\n      \"Longitude\": -89.6321792602539,\n      \"Latitude\": 36.898811340332\n    },\n    {\n      \"ID\": 32801,\n      \"Name\": \"Waco\",\n      \"Mobility\": 0.0675374344,\n      \"State\": \"TX\",\n      \"Population\": 281618,\n      \"Urban\": 1,\n      \"Black\": 0.141,\n      \"Seg_racial\": 0.191,\n      \"Seg_income\": 0.105,\n      \"Seg_poverty\": 0.109,\n      \"Seg_affluence\": 0.101,\n      \"Commute\": 0.363,\n      \"Income\": 31690,\n      \"Gini\": 0.492,\n      \"Share01\": 12.76,\n      \"Gini_99\": 0.364,\n      \"Middle_class\": 0.504,\n      \"Local_tax_rate\": 0.023,\n      \"Local_gov_spending\": 1729.0,\n      \"Progressivity\": 0.0,\n      \"EITC\": 0.0,\n      \"School_spending\": 5.56,\n      \"Student_teacher_ratio\": 14.9,\n      \"Test_scores\": 1.721,\n      \"HS_dropout\": 0.002,\n      \"Colleges\": 0.014,\n      \"Tuition\": 6505.0,\n      \"Graduation\": 0.074,\n      \"Labor_force_participation\": 0.604,\n      \"Manufacturing\": 0.147,\n      \"Chinese_imports\": 0.902,\n      \"Teenage_labor\": 0.004,\n      \"Migration_in\": 0.021,\n      \"Migration_out\": 0.021,\n      \"Foreign_born\": 0.059,\n      \"Social_capital\": -0.468,\n      \"Religious\": 0.597,\n      \"Violent_crime\": 0.002,\n      \"Single_mothers\": 0.24,\n      \"Divorced\": 0.098,\n      \"Married\": 0.557,\n      \"Longitude\": -97.3319702148438,\n      \"Latitude\": 31.7745532989502\n    }\n  ],\n  \"column names\": [\n    \"ID\",\n    \"Name\",\n    \"Mobility\",\n    \"State\",\n    \"Population\",\n    \"Urban\",\n    \"Black\",\n    \"Seg_racial\",\n    \"Seg_income\",\n    \"Seg_poverty\",\n    \"Seg_affluence\",\n    \"Commute\",\n    \"Income\",\n    \"Gini\",\n    \"Share01\",\n    \"Gini_99\",\n    \"Middle_class\",\n    \"Local_tax_rate\",\n    \"Local_gov_spending\",\n    \"Progressivity\",\n    \"EITC\",\n    \"School_spending\",\n    \"Student_teacher_ratio\",\n    \"Test_scores\",\n    \"HS_dropout\",\n    \"Colleges\",\n    \"Tuition\",\n    \"Graduation\",\n    \"Labor_force_participation\",\n    \"Manufacturing\",\n    \"Chinese_imports\",\n    \"Teenage_labor\",\n    \"Migration_in\",\n    \"Migration_out\",\n    \"Foreign_born\",\n    \"Social_capital\",\n    \"Religious\",\n    \"Violent_crime\",\n    \"Single_mothers\",\n    \"Divorced\",\n    \"Married\",\n    \"Longitude\",\n    \"Latitude\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart, it can be a question or a command. One NL 'utterance' is in one or two sentences. \n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [],\n  \"constraints\": [\n    {\n      \"c_type\": \"mark\",\n      \"c_name\": \"bar chart\",\n      \"c_list\": [\n        {\n          \"mark\": \"bar\",\n          \"encoding\": {\n            \"x\": {},\n            \"y\": {\n              \"type\": \"quantitative\"\n            },\n            \"color\": {\n              \"type\": \"nominal\",\n              \"ignore\": true\n            },\n            \"column\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            },\n            \"row\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            }\n          },\n          \"unique_map\": {\n            \"x\": \"y\"\n          }\n        },\n        {\n          \"mark\": \"bar\",\n          \"encoding\": {\n            \"y\": {},\n            \"x\": {\n              \"type\": \"quantitative\"\n            },\n            \"color\": {\n              \"type\": \"nominal\",\n              \"ignore\": true\n            },\n            \"column\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            },\n            \"row\": {\n              \"ignore\": true,\n              \"type\": \"nominal\"\n            }\n          },\n          \"unique_map\": {\n            \"y\": \"x\"\n          }\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"aggregate\",\n      \"c_list\": [\n        {\n          \"aggregate\": \"count\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}