{
  "gpt_result": {
    "nl_utterance": "Generate a pie chart for item details considering only specific lines 3, 6, 7, 9, and 21. Sort the data in ascending order by pie number.",
    "encoded_fields": [
      {
        "field": "Value",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "value"
      },
      {
        "field": [
          "Item",
          "shortName"
        ],
        "type": "nominal",
        "nl_ref_type": "ambiguous",
        "nl_ref_phrase": "item details"
      }
    ],
    "constraints": [
      {
        "c_type": "transform",
        "c_name": "filter",
        "c_list": [
          {
            "field": "Line",
            "oneOf": [
              3,
              6,
              7,
              9,
              21
            ]
          }
        ],
        "nl_ref_type": "by_value",
        "nl_ref_phrase": "lines 3, 6, 7, 9, and 21"
      },
      {
        "c_type": "transform",
        "c_name": "sort",
        "c_list": [
          {
            "field": "pieNumber",
            "order": "ascending"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "ascending order by pie number"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"Line\": 1,\n      \"Item\": \"Gross domestic income\",\n      \"shortName\": \"GDI\",\n      \"pieNumber\": NaN,\n      \"Value\": 25844.7\n    },\n    {\n      \"Line\": 18,\n      \"Item\": \"Net dividends\",\n      \"shortName\": NaN,\n      \"pieNumber\": NaN,\n      \"Value\": 1239.4\n    },\n    {\n      \"Line\": 19,\n      \"Item\": \"Undistributed corporate profits with inventory valuation and capital consumption adjustments\",\n      \"shortName\": NaN,\n      \"pieNumber\": NaN,\n      \"Value\": 856.7\n    },\n    {\n      \"Line\": 3,\n      \"Item\": \"Wages and salaries\",\n      \"shortName\": \"Wages\",\n      \"pieNumber\": 1.0,\n      \"Value\": 11259.5\n    },\n    {\n      \"Line\": 15,\n      \"Item\": \"Corporate profits with inventory valuation and capital consumption adjustments, domestic industries\",\n      \"shortName\": NaN,\n      \"pieNumber\": NaN,\n      \"Value\": 2553.2\n    }\n  ],\n  \"column names\": [\n    \"Line\",\n    \"Item\",\n    \"shortName\",\n    \"pieNumber\",\n    \"Value\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a commands structure. One NL 'utterance' is in one or two sentences. Here are two examples from Commands for reference:\n    Make the bars stacked with the ship status.\n    Show me a bar graph of the profit for each region.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"Value\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": [\n        \"Item\",\n        \"shortName\"\n      ],\n      \"type\": \"nominal\",\n      \"nl_ref_type\": \"ambiguous\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"filter\",\n      \"c_list\": [\n        {\n          \"field\": \"Line\",\n          \"oneOf\": [\n            3,\n            6,\n            7,\n            9,\n            21\n          ]\n        }\n      ],\n      \"nl_ref_type\": \"by_value\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"sort\",\n      \"c_list\": [\n        {\n          \"field\": \"pieNumber\",\n          \"order\": \"ascending\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}