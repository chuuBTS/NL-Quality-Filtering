{
  "gpt_result": {
    "nl_utterance": "Show me how the weight of the cars has changed over the years.",
    "encoded_fields": [
      {
        "field": "Weight",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "weight"
      },
      {
        "field": "Year",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "years"
      }
    ],
    "constraints": []
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"Model\": \"volkswagen 1131 deluxe sedan\",\n      \"MPG\": 26.0,\n      \"Cylinders\": 4,\n      \"Displacement\": 97.0,\n      \"Horsepower\": 46,\n      \"Weight\": 1835,\n      \"Acceleration\": 20.5,\n      \"Year\": 1970,\n      \"Origin\": \"Europe\"\n    },\n    {\n      \"Model\": \"pontiac grand prix lj\",\n      \"MPG\": 16.0,\n      \"Cylinders\": 8,\n      \"Displacement\": 400.0,\n      \"Horsepower\": 180,\n      \"Weight\": 4220,\n      \"Acceleration\": 11.1,\n      \"Year\": 1977,\n      \"Origin\": \"US\"\n    },\n    {\n      \"Model\": \"datsun 280-zx\",\n      \"MPG\": 32.7,\n      \"Cylinders\": 6,\n      \"Displacement\": 168.0,\n      \"Horsepower\": 132,\n      \"Weight\": 2910,\n      \"Acceleration\": 11.4,\n      \"Year\": 1980,\n      \"Origin\": \"Japan\"\n    },\n    {\n      \"Model\": \"toyota tercel\",\n      \"MPG\": 37.7,\n      \"Cylinders\": 4,\n      \"Displacement\": 89.0,\n      \"Horsepower\": 62,\n      \"Weight\": 2050,\n      \"Acceleration\": 17.3,\n      \"Year\": 1981,\n      \"Origin\": \"Japan\"\n    },\n    {\n      \"Model\": \"maxda rx3\",\n      \"MPG\": 18.0,\n      \"Cylinders\": 3,\n      \"Displacement\": 70.0,\n      \"Horsepower\": 90,\n      \"Weight\": 2124,\n      \"Acceleration\": 13.5,\n      \"Year\": 1973,\n      \"Origin\": \"Japan\"\n    }\n  ],\n  \"column names\": [\n    \"Model\",\n    \"MPG\",\n    \"Cylinders\",\n    \"Displacement\",\n    \"Horsepower\",\n    \"Weight\",\n    \"Acceleration\",\n    \"Year\",\n    \"Origin\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart.  One NL 'utterance' is in one or two sentences. Here are two examples from Others for reference:\n    Trend for average horsepower over time across different origin.\n    I want to know how many orders there are by the quantity of the order.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"Weight\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": \"Year\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": []\n}\n\n### Output:"
}