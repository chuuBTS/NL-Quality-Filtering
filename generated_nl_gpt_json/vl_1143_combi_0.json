{
  "gpt_result": {
    "nl_utterance": "Create a chart to show the sum of Totals in billions over the Years.",
    "encoded_fields": [
      {
        "field": "Year",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "Years"
      },
      {
        "field": "Totals_billions",
        "type": "quantitative",
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "Totals in billions"
      }
    ],
    "constraints": [
      {
        "c_type": "transform",
        "c_name": "aggregate",
        "c_list": [
          {
            "field": "Totals_billions",
            "aggregate": "sum"
          }
        ],
        "nl_ref_type": "explicit",
        "nl_ref_phrase": "sum of Totals"
      }
    ]
  },
  "input": "Dataset Information: {\n  \"data samples\": [\n    {\n      \"Date\": \"08/31/2022\",\n      \"GRA Purchases\": 93769635059,\n      \"PRGT 1/2/\": 15254184552,\n      \"Totals\": 109023819611,\n      \"Year\": 2022,\n      \"Totals_billions\": 109.0238196\n    },\n    {\n      \"Date\": \"12/31/2021\",\n      \"GRA Purchases\": 89474552025,\n      \"PRGT 1/2/\": 14554823681,\n      \"Totals\": 104029375706,\n      \"Year\": 2021,\n      \"Totals_billions\": 104.0293757\n    },\n    {\n      \"Date\": \"12/31/2009\",\n      \"GRA Purchases\": 37221142436,\n      \"PRGT 1/2/\": 5079705286,\n      \"Totals\": 42300847722,\n      \"Year\": 2009,\n      \"Totals_billions\": 42.30084772\n    },\n    {\n      \"Date\": \"12/31/1990\",\n      \"GRA Purchases\": 20731851093,\n      \"PRGT 1/2/\": 2571911617,\n      \"Totals\": 23303762710,\n      \"Year\": 1990,\n      \"Totals_billions\": 23.30376271\n    },\n    {\n      \"Date\": \"12/31/2012\",\n      \"GRA Purchases\": 90042348252,\n      \"PRGT 1/2/\": 5766292503,\n      \"Totals\": 95808640755,\n      \"Year\": 2012,\n      \"Totals_billions\": 95.80864076\n    }\n  ],\n  \"column names\": [\n    \"Date\",\n    \"GRA Purchases\",\n    \"PRGT 1/2/\",\n    \"Totals\",\n    \"Year\",\n    \"Totals_billions\"\n  ]\n}\n\nYour Job:\nI am developing a NL to Data Visualization Dataset. \nPlease help me generate natural language utterance for given dataset and constraints.\nDefinition about the Taks:\n- 'utterance' is what a user would say to make a chart. It should be a commands structure. One NL 'utterance' is in one or two sentences. Here are two examples from Commands for reference:\n    Graph to show the acceleration for cars from different countries segregated based on number of cylinders.\n    Draw axes for AVG(Horsepower) vs Year, colored by Origin.\n- 'given dataset' is in form of column names, column type, range/unique values of the column.\n- 'constraints' are information about the chart that should be included in the utterance. \n    So we can find a reference phrase in the NL utterance that corresponds to the given constraints. \n- 'reference phrase' can be explicit, ambiguous, and by_value. 'ambiguous' means the phrase can map to more than one columns in the dataset, always a hypernym of column names(depending on the dataset values).\n    For example:\n    {\"column\": \"gdpPercap\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"GDP per capita\"},\n    {\"column\": [\"country\",\"continent\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n    {\"column\": [\"country\",\"country_short_name\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"countries\"}\n    {\"c_type\": \"mark\", \"c_name\": \"point chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"scatter plot\"}\n    {\"c_type\": \"mark\", \"c_name\": \"arc chart\", \"nl_ref_type\": \"explicit\", \"nl_ref_phrase\": \"pie chart\"}\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"explicit\",\"nl_ref_phrase\": \"for countries Iceland and Norway\"},\n    {\"c_type\": \"transform\",\"c_name\": \"filter\",\"c_list\": [{\"field\": \"country\",\"oneOf\": [\"Iceland\",\"Norway\"]}],\"nl_ref_type\": \"by_value\",\"nl_ref_phrase\": \"for Iceland and Norway\"},\n- the 'nl_ref_phrase' for 'ambiguous' columns should be equally near all ambiguous columns, not too near to one of the column since it would not be ambiguous.\n    good example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"location\"}\n    bad example: {\"column\": [\"country\",\"region\"], \"nl_ref_type\": \"ambiguous\", \"nl_ref_phrase\": \"region\"}\n- You only include given constraints and no other information. \n    For example, if a column name is not in the given constraint, it will not be included in the NL utterance.\n    Also, it a chart mark or chart encoding channel is not in the given constraint, it will not be included in the NL utterance.\n- all 'nl_ref_phrase' shoule be included in the 'nl_utterance'. \n\nThe output format is identical to the input format, but fill in the str blanks(\"...\").\n### Input:\n{\n  \"nl_utterance\": \"...\",\n  \"encoded_fields\": [\n    {\n      \"field\": \"Year\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    },\n    {\n      \"field\": \"Totals_billions\",\n      \"type\": \"quantitative\",\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ],\n  \"constraints\": [\n    {\n      \"c_type\": \"transform\",\n      \"c_name\": \"aggregate\",\n      \"c_list\": [\n        {\n          \"field\": \"Totals_billions\",\n          \"aggregate\": \"sum\"\n        }\n      ],\n      \"nl_ref_type\": \"explicit\",\n      \"nl_ref_phrase\": \"...\"\n    }\n  ]\n}\n\n### Output:"
}